{
  "title": "Llama Index + Langchain Gmail Loader",
  "summary": "詳細信息摘要：此視頻說明瞭如何使用Lang Chain模型將Gmail加載器與Llama Hub一起查詢電子郵件。它要求Google Cloud憑據使用Gmail加載程序。用戶可以查詢2023年3月以後發送的電子郵件，由某個發件人發送，或包含某個短語的電子郵件。用戶正在使用Lang Chain庫中的Llama Hub加載器，Llama索引和OpenAI模型，簡化來構建簡單的GUI，而GPT Simple Vector Index從Llama Index中存儲數據。\n\n子彈點摘要：\n•使用Llama Hub和Lang Chain模型的Gmail裝載機來查詢電子郵件\n•需要Google Cloud憑據使用Gmail加載器\n•使用Lang Chain Library的Llama Hub裝載機，Llama Index和OpenAI模型\n•使用簡化來構建簡單的GUI\n•使用Llama索引的GPT簡單矢量索引存儲數據",
  "dialogue": "hey everyone Michael here today we're, going to be going over Gmail loaders, with llama hub using Lang chain models, to query your own emails so before we, start I'm just going to go over what I'm, using for this video I am using llama, Hub loaders you can find that at llama, hub.ai I'm using llama index you can, find this at Lama index, cupidindex.redocs.io and I will be using, the openai model from the Lang chain, Library so I will put all of those, in the description below, but let's get into it and go over a bit, of how this all works so, first one talk about the Gmail loader, um again if you're not familiar with the, Llama Hub loaders you can find them all, here and they do have a ton so I would, recommend checking them out, but for the Gmail loader the way this, works is you will import downloader from, llama index and you will download the, letter of Gmail reader and, just to give a little bit of insight, into what it's doing this is the Gmail, reader class so as you can see when it, loads data it is doing a lot of stuff, under the hood to retrieve your emails, using Google Cloud, and Google API clients so, to get into this I will now go over a, bit of the code, here we have our main file and again I'm, also using streamlit just for a simple, GUI to demonstrate how this all works, um and I'm also going to explain a, little bit why I have these buttons here, instead of having them just type in, queries in the original, attempt I try to just have it be like, type in a query but I believe that it is, important to restrict the inputs as much, as possible for the users when you're, dealing with large language models so, you can get them the information you, know they want and can define a lot of, the parameters and the queries for them, so, for example this button recent emails, you will find right here, when you click that it is going to query, the call the query email function and, then we're going to get documents get, prompt and get the index so let's go, into the get Pro get documents, function, the get documents function is using the, Gmail reader and it is loading, 10 documents and what is email queer, query we are using well I have a, constant dictionary and I'm accessing, the recent emails query, and this is the query for the Gmail API, to use and the way I got I got to this, conclusion was by basically going to my, email, and, typing in like when you type in stuff, like this like in inbox, and it filters out everything just for, the inbox I use chat GPT to basically, generate a different like a very more, complex uh, filter uh one that just did not pick up, on anything with like no reply, notifications subscribe, do not reply anything that could just be, spam or just like updates and you just, want emails from actual senders, um so if you're interested in like, playing around with that I will check, that out as well, uh so after we get the documents we are, then calling get in get prompt, get prompt is, up here, and for this we are using a question and, answer prompt from the, llama index Library, and this is the prompt so I'm saying, you're an email assistant usually ask, about emails and the contexts which is, provided below, contact string and, then we have given the information yeah, please answer the question that'll be, the query string and so like question, answer prompts and prompt templates from, the libraries like Lang chain and LOM, index are basically just ways to make, your life easier and make things more uh, Plug and Play instead of trying to do, this all, custom so I would recommend getting, familiar with the prompt templates as, much as possible when you're doing, things like this, the next function we are calling is yeah, index and it takes one parameter this is, the documents the documents that we get, from the get documents function, and they get documents if you haven't, seen the other videos like a document is, just a standardized way, of formatting data so it's usually like, a tuple of, text and extra info so any information, any data that your reader or loader, polls is going to be putting it into one, of those two things so text or extra, info if it's a document in link chain I, believe the uh the two things are going, to be, um page content and metadata so, depending on which Library you use, um just kind of be aware that the, documents that the document type is, somewhat different uh in terms of the, actual, key value pairs in the tuples, um but anyways getting into the get, index function we have, let's go over this first The Prompt, helper The Prompt helper is if we go to, gbg Index this thing it says this helper, can split text it can also concatenate, text from node strokes but keeping token, limitations in mind so, tldr this basically just abstracts away, a lot of the workload that you'd have to, do for ensuring that you're not, exceeding token limits when you're, making open AI calls and you can, determine what types of chunks sizes you, want when you're splitting the text and, a lot of this is just done under the, hood, uh the next thing we're doing is we're, getting an llm predictor so LM predictor, is a class from, bomb index again and we are using a, length chain, open AI model uh to instantiate the llm, for this I'm using text DaVinci 003 I, would recommend using text Ada, 001 when you're first starting out just, because wait this is going to be making, all the embeddings and you just really, don't want to be spending as many tokens, as you need to and spending as much, money as you need to and this is the, cheapest model it'll just be less, quality than the DaVinci 3., but you can always change it afterwards, after that just for demonstration, purposes I'm using the GPT simple Vector, index so, this is just going to be a huge Json, object that is local to your device this, is courtesy of LOM index if you want to, connect to, other indices, it does show you how to do that in the, documentation with different types of, active stores you can connect to I, believe they have like chroma they have, pine cone they have uh yeah right here, they have quadrant they have fa they, have Feist I don't know how to say that, um and a couple others, but for this I'm just using the GPT, simple Vector index now right here what, I'm doing is you'll you'll understand, why in a minute I am first going to, check if I have an index.json file and, if I don't then I'm going to set index, equal to none the reason I do that is so, if there is no index.json file if this, is like the initial load of your vector, index then we can say if index is none, we can instantiate a GPT simple Vector, index put all the documents that we that, we pass into the function, Dell on predictor and the prompt Helper, and then we save it to disk so there, will be a file here that is called, index.json then we're going to return, the index, and then we are going to run index.query, and this takes two parameters for my, purposes it's going to take the actual, query which is, here, is uh recent emails or what are my, recent emails that is the query, or find me recent emails, and the next thing that it's going to, take is the prompt detects q a prompt, and so under the hood this will be, taking in the input variables that we, have and dynamically putting them into, the prom template before it runs the, entire thing so the The Prompt templates, again are just to kind of set some, context for the large language model and, provide the extra information uh like, the documents so it has access to those, and it can search those and respond with, that information in mind, now the next thing I forgot to mention, you will need is you will need, credentials from Google Cloud to access, your Gmail so if you're not familiar, with how to get that if I can just like, if I can go to Google, I'm going to cloud.google.com, you will need to go to the console and, you will want to make a new project, so like I like gem AI but, for this project you'll want to then go, to, enable apis and services then you you, can go to add enable, apis and you will want to look for the, Gmail, API, you'll want to initialize this and then, once you do this you can get your oauth, credentials and get your, credentials.json file like I have here, and you should call it this because this, is what the Gmail reader looks for under, the hood, at the moment I do plan to probably, modify the current reader to my liking, and add some extra things like some, extra functions and some extra logic, um, because I'm a little disappointed in the, functionality of it at the moment I wish, I could do more but it only gets the, last 10 emails and I haven't really seen, a way to set a new default, um easily maybe I'm doing something, wrong someone can let me know in the, comments, but anyways, uh let's just kind of show you how this, works when we actually run it so, streamlined run email chat dot pi, I'm gonna come here, and now we're going to hit recent emails, to get the recent emails we have and so, it takes you to the Google auth screen, I'm going to be using Merkel because, this is a test account, um and there we go so now we've, authenticated the emails and it will, continue its process of, saving the index to disk so now we have, our token this token is the access token, we have to get emails from my Merkel, Gmail account, and so it's going to keep running here, and we're just going to see, what it gives us so there we go based on, the information provided it appears the, user has received an email from Michael, on March so that's a bit wrong, um I will have to try to figure out why, that is but, uh it is saying the email contains a, snippet that reads hey Michael let's try, going over this email where it takes us, for starters can you send me the, targeting you have in mind so I can send, so I can have our data team run a query, and check how many looking for recent, emails you can search emails sent after, March 2023 you can also search emails, sent by Michael or emails that contain, the phrase targeting you have in mind so, let's check hey Michael let's go over, email let's see where it takes us and so, send 47 minutes ago so that is right and, I am pretty happy about this, um again this is not as you know robust, as I'd like it to be at the moment but I, am exploring this loader because I have, some some needs for it for maybe for, something I'm working on, um, and yeah so that is essentially how you, would use the Gmail loader, um I think this is a super powerful, loader in my mind because it's you know, if you want to just search when this, gets better hey like, what what did so and so say, um yesterday and if it could you know, accurately pull that I think that would, be phenomenal, um if you have any questions, please drop them in the comments, uh if you have any suggestions on what I, could do to improve this also give me, suggestions uh hit me up hit me up in, the comments hit me up on Twitter, um and yeah that is the video for now uh, thank you again there's no, set outro for this so uh goodbye",
  "zh text": null
}